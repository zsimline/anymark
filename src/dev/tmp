websocket-server.ts

客户端认证
    // Optionally call external client verification handler.
    if (this.opts.verifyClient) {
      const info = {
        origin: req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],
        secure: !!(req.connection.authorized || req.connection.encrypted),
        req
      };

      if (this.opts.verifyClient.length === 2) {
        this.opts.verifyClient(info, (verified, code, message, headers) => {
          if (!verified) {
            return this.abortHandshake(socket, code || 401, message, headers);
          }

          this.completeUpgrade(key, extensions, req, socket, head, cb);
        });
        return;
      }

      if (!this.opts.verifyClient(info)) return this.abortHandshake(socket, 401);
    }


/** Center vertically */
.v-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/** Center horizontal */
.h-center {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}